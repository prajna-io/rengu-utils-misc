#!/usr/bin/env python

import sys
import textwrap

import click

from rengu.util.text import *


def debug_format_body(body, wrap, indent, maxlen):

    yield f"{wrap=}\n{indent=}\n{maxlen=}\n"

    for i, block in enumerate(stream_readblocks_re("\n\n", body)):

        yield f"----- BLOCK {i} --- { detect_kind(block) }\n"

        for j, line in lines(block):
            if line:
                yield f"{j:>4}: {line}\n"


def format_body(fd, wrap, indent, maxlen):

    for block in stream_readblocks_re("\n\n", fd):

        kind = detect_kind(block)

        if kind == "verse":
            yield "\n".join(
                [" " * indent + line for n, line in lines(block, kind=kind)]
            )

        else:
            wrap = textwrap.TextWrapper(
                width=maxlen,
                expand_tabs=True,
                initial_indent=" " * indent,
                subsequent_indent=" " * indent,
                replace_whitespace=True,
                # fix_sentence_endings=True,
                break_long_words=False,
                break_on_hyphens=False,
            )

            yield wrap.fill(" ".join([line for _, line in lines(block, kind=kind)]))


@click.command()
@click.option(
    "--wrap/--no-wrap", "-w/-W", is_flag=True, show_default=True, default=True
)
@click.option("--indent", "-i", default=0, type=int)
@click.option("--maxlen", "-m", default=75, type=int)
@click.option("--debug", "-D", is_flag=True)
def main(wrap, indent, maxlen, debug):

    if not wrap and indent:
        click.echo("Wrap and indent options are mutually exclusive")
        return

    if debug:
        for f in debug_format_body(sys.stdin, wrap, indent, maxlen):
            sys.stdout.write(f)

    else:
        sys.stdout.write("\n\n".join(format_body(sys.stdin, wrap, indent, maxlen)))
        print("")


if __name__ == "__main__":
    main()
